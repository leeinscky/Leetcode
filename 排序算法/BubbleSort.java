import java.util.Arrays;

//冒泡排序   按顺序两两比较，每一轮都会使最大的那个数移动到数组最右边，逐渐累加 

//基本思想：持续比较相邻的元素。如果第一个比第二个大，就交换他们两个。直到没有任何一对数字需要比较。

/* https://zhuanlan.zhihu.com/p/34168443 
冒泡排序顾名思义就是整个过程像气泡一样往上升，单向冒泡排序的基本思想是（假设由小到大排序）：
1. 对于给定n个记录，从第一个记录开始依次对相邻的两个记录进行比较，当前面的记录大于后面的记录时，交换位置，
2. 进行一轮比较和换位后，n个记录的最大记录将位于第n位，
3. 然后对前（n-1）个记录进行第二轮比较；
4. 重复该过程，直到记录剩下一个为止。
*/

public class BubbleSort {
    public static void bubbleSort(int[] array) {

        int temp;
        for (int i = array.length - 1; i >= 0 ; i--) { //外层循环从右往左移动，因为每次循环右边就会多一个固定的已经排好的元素，但是左边仍然无序
            for (int j =0; j < i; j++) { // 每一轮都找到一个最大的数放在右边

                if (array[j] > array[j + 1]) { //大的数往右移
                    temp = array[j];
                    array[j] = array[j + 1];
                    array[j + 1] = temp; 
                }
            }
            System.out.println(Arrays.toString(array));
        }
    }

    public static void main(String[] args) {

        int array[] = { 12, 9, 14, 6, 14, 3, 7, 13, 5, 11, 1, 10, 8, 4, 2 };
        bubbleSort(array);
        System.out.println(Arrays.toString(array));
    }

}


/*/** 程序打印输出，可以看到每一轮最大的数都会飘到最右边
[9, 12, 6, 14, 3, 7, 13, 5, 11, 1, 10, 8, 4, 2, 14]
[9, 6, 12, 3, 7, 13, 5, 11, 1, 10, 8, 4, 2, 14, 14]
[6, 9, 3, 7, 12, 5, 11, 1, 10, 8, 4, 2, 13, 14, 14]
[6, 3, 7, 9, 5, 11, 1, 10, 8, 4, 2, 12, 13, 14, 14]
[3, 6, 7, 5, 9, 1, 10, 8, 4, 2, 11, 12, 13, 14, 14]
[3, 6, 5, 7, 1, 9, 8, 4, 2, 10, 11, 12, 13, 14, 14]
[3, 5, 6, 1, 7, 8, 4, 2, 9, 10, 11, 12, 13, 14, 14]
[3, 5, 1, 6, 7, 4, 2, 8, 9, 10, 11, 12, 13, 14, 14]
[3, 1, 5, 6, 4, 2, 7, 8, 9, 10, 11, 12, 13, 14, 14]
[1, 3, 5, 4, 2, 6, 7, 8, 9, 10, 11, 12, 13, 14, 14]
[1, 3, 4, 2, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 14]
[1, 3, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 14]
[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 14]
[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 14]
[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 14]
[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 14]
 */
